name: "1Ô∏è‚É£ Windows EXE Builder (Fixed)"

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true  # ÂÖÅËÆ∏ÊóßÁâàÂëΩ‰ª§
  VCPKG_DISABLE_METRICS: true           # Á¶ÅÁî®vcpkgÈÅ•Êµã

on:on:
  # ÊâãÂä®Ëß¶ÂèëÔºàÂ∏¶ÂèÇÊï∞Ôºâ
  workflow_dispatch:
    inputs:
      build_type:
        description: "Build Type (Debug/Release)"
        required: true
        default: "release"
        type: choice
        options: 
          - "release"
          - "debug"
  
  workflow_dispatch:
    inputs:
      build_type:
        description: "Build Type"
        required: true
        default: "release"
        type: choice
        options: ["release", "debug"]
  
  push:
    branches: [master]

jobs:
  build:
    name: "üõ†Ô∏è Build (${{ github.event.inputs.build_type || 'release' }})"
    runs-on: windows-latest

    steps:
    # Á¨¨‰∏ÄÊ≠•ÔºöÊ£ÄÂá∫‰ª£Á†Å
    - name: "1Ô∏è‚É£ Checkout Code"
      uses: actions/checkout@v4

    # Á¨¨‰∫åÊ≠•ÔºöÂÆâË£ÖRust
    - name: "2Ô∏è‚É£ Install Rust"
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        targets: x86_64-pc-windows-msvc

    # Á¨¨‰∏âÊ≠•ÔºöÂÆâË£ÖvcpkgÔºà‰øÆÂ§çÁâàÔºâ
    - name: "3Ô∏è‚É£ Install vcpkg"
      shell: pwsh
      run: |
        $vcpkgRoot = "C:\vcpkg"
        if (-not (Test-Path "$vcpkgRoot\.git")) {
          git clone https://github.com/microsoft/vcpkg $vcpkgRoot
        }
        cd $vcpkgRoot
        git pull
        .\bootstrap-vcpkg.bat -disableMetrics
        echo "VCPKG_ROOT=$vcpkgRoot" >> $env:GITHUB_ENV
        echo "$vcpkgRoot" | Out-File -FilePath $env:GITHUB_PATH -Append

    # Á¨¨ÂõõÊ≠•ÔºöÂÆâË£Ö‰æùËµñ
    - name: "4Ô∏è‚É£ Install Dependencies"
      shell: pwsh
      run: |
        $ErrorActionPreference = "Stop"
        & "$env:VCPKG_ROOT\vcpkg" install `
          --triplet x64-windows `
          --clean-after-build `
          libvpx libyuv openssl

    # Á¨¨‰∫îÊ≠•ÔºöÊûÑÂª∫È°πÁõÆ
    - name: "5Ô∏è‚É£ Build Project"
      shell: pwsh
      run: |
        $buildType = "${{ github.event.inputs.build_type || 'release' }}"
        cargo build --$buildType --target x86_64-pc-windows-msvc
        
        $exePath = "target\x86_64-pc-windows-msvc\$buildType\rustdesk.exe"
        if (-not (Test-Path $exePath)) {
          Write-Output "::error::EXE not found at $exePath"
          Get-ChildItem -Recurse target\
          exit 1
        }
        echo "EXE_PATH=$exePath" >> $env:GITHUB_ENV

    # Á¨¨ÂÖ≠Ê≠•Ôºö‰∏ä‰º†‰∫ßÁâ©
    - name: "6Ô∏è‚É£ Upload Artifact"
      uses: actions/upload-artifact@v4
      with:
        name: "rustdesk-${{ github.event.inputs.build_type || 'release' }}"
        path: |
          ${{ env.EXE_PATH }}
          target\x86_64-pc-windows-msvc\${{ github.event.inputs.build_type || 'release' }}/*.dll
        retention-days: 7
        if-no-files-found: error
