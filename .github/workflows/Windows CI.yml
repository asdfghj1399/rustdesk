name: "1️⃣ Windows EXE Builder (Manual+Auto)"

on:
  # 手动触发（带参数）
  workflow_dispatch:
    inputs:
      build_type:
        description: "Build Type (Debug/Release)"
        required: true
        default: "release"
        type: choice
        options: 
          - "release"
          - "debug"
  
  # 自动触发
  push:
    branches: [ master ]

jobs:
  build:
    name: "🛠️ Build (${{ github.event.inputs.build_type || 'release' }})"
    runs-on: windows-latest  # 使用最新Windows镜像避免版本问题

    steps:
    # 第一步：准备环境
    - name: "1️⃣ Checkout Code"
      uses: actions/checkout@v4

    # 第二步：安装Rust（修复工具链问题）
    - name: "2️⃣ Install Rust"
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-pc-windows-msvc
        profile: minimal
        override: true

    # 第三步：安装vcpkg（修复路径问题）
    - name: "3️⃣ Setup vcpkg"
      shell: powershell
      run: |
        $vcpkgRoot = "C:\vcpkg"
        if (-not (Test-Path "$vcpkgRoot\.git")) {
          git clone https://github.com/microsoft/vcpkg $vcpkgRoot
        }
        cd $vcpkgRoot
        git pull
        .\bootstrap-vcpkg.bat
        echo "VCPKG_ROOT=$vcpkgRoot" >> $env:GITHUB_ENV
        echo "::add-path::$vcpkgRoot"

    # 第四步：安装依赖（修复依赖问题）
    - name: "4️⃣ Install Dependencies"
      shell: powershell
      run: |
        vcpkg install --triplet x64-windows @(
          "libvpx",
          "libyuv",
          "openssl"
        ) --clean-after-build

    # 第五步：构建项目（修复构建问题）
    - name: "5️⃣ Build Project"
      shell: powershell
      run: |
        $buildType = "${{ github.event.inputs.build_type || 'release' }}"
        cargo build --$buildType --target x86_64-pc-windows-msvc -v
        
        # 验证EXE文件是否存在
        $exePath = "target\x86_64-pc-windows-msvc\$buildType\rustdesk.exe"
        if (-not (Test-Path $exePath)) {
          Write-Output "::error::EXE file not found at $exePath"
          Get-ChildItem -Recurse target\
          exit 1
        }
        echo "EXE_PATH=$exePath" >> $env:GITHUB_ENV

    # 第六步：打包并上传（修复upload-artifact问题）
    - name: "6️⃣ Upload Artifact"
      uses: actions/upload-artifact@v4  # 使用最新v4版本
      with:
        name: "rustdesk-${{ github.event.inputs.build_type || 'release' }}"
        path: |
          ${{ env.EXE_PATH }}
          target\x86_64-pc-windows-msvc\${{ github.event.inputs.build_type || 'release' }}/*.dll
        retention-days: 7
        if-no-files-found: error
