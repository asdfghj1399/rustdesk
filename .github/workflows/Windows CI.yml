name: 1Windows Build

env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "b2cb0da531c2f1f740045bfe7c4dac59f0b2b69c"

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "README.md"
  push:
    branches:
      - master
    paths-ignore:
      - ".github/**"
      - "docs/**"
      - "README.md"
      - "res/**"

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-2022

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      id: setup_vcpkg
      with:
        vcpkgDirectory: 'C:\vcpkg'
        vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}

    - name: Install dependencies
      shell: pwsh
      run: |
        # 确保使用绝对路径
        $vcpkgRoot = "${{ steps.setup_vcpkg.outputs.vcpkgRoot }}"
        if (-not (Test-Path "$vcpkgRoot\vcpkg.exe")) {
            Write-Error "vcpkg.exe not found at $vcpkgRoot"
            exit 1
        }
        
        # 添加vcpkg到PATH
        $env:PATH = "$vcpkgRoot;$env:PATH"
        
        # 安装依赖
        vcpkg install --triplet x64-windows libvpx libyuv openssl
        if ($LASTEXITCODE -ne 0) {
            Write-Error "vcpkg install failed"
            exit 1
        }

    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        targets: x86_64-pc-windows-msvc

    - name: Build
      shell: pwsh
      run: |
        cargo build --release --target x86_64-pc-windows-msvc

    - name: Show output
      shell: pwsh
      run: |
        dir target\x86_64-pc-windows-msvc\release\
        Write-Host "✅ Build completed successfully"
