name: "üõ†Ô∏è RustDesk Windows Build (Stable)"

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: "Select build configuration"
        required: true
        default: "release"
        type: choice
        options: ["release", "debug"]
      clean_build:
        description: "Perform full clean before build"
        type: boolean
        default: false

env:
  SYSTEMROOT: "C:\\Windows"  # Á°Æ‰øùÁ≥ªÁªüË∑ØÂæÑÊ≠£Á°Æ
  VCPKG_ROOT: "C:\\vcpkg"
  BUILD_DIR: "C:\\build_output"

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
    - name: "1. Setup Environment"
      shell: powershell
      run: |
        # Êõø‰ª£chcpÁöÑÁºñÁ†ÅËÆæÁΩÆÊñπÊ°à
        $OutputEncoding = [System.Text.Encoding]::UTF8
        [Console]::OutputEncoding = [System.Text.Encoding]::UTF8

        # Ê∏ÖÁêÜÁéØÂ¢É
        if (${{ inputs.clean_build }}) {
          Remove-Item -Recurse -Force "$env:VCPKG_ROOT" -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force "$env:BUILD_DIR" -ErrorAction SilentlyContinue
        }

    - name: "2. Install vcpkg"
      shell: powershell
      run: |
        if (-not (Test-Path "$env:VCPKG_ROOT\vcpkg.exe")) {
          git clone https://github.com/microsoft/vcpkg "$env:VCPKG_ROOT"
          & "$env:VCPKG_ROOT\bootstrap-vcpkg.bat" -disableMetrics
        }
        echo "$env:VCPKG_ROOT" | Out-File -FilePath $env:GITHUB_PATH -Append

    - name: "3. Install Dependencies"
      shell: powershell
      run: |
        $installArgs = @(
          "install",
          "libvpx",
          "libyuv", 
          "openssl",
          "--triplet", "x64-windows",
          "--clean-after-build"
        )
        & "$env:VCPKG_ROOT\vcpkg" @installArgs

    - name: "4. Build Project"
      shell: powershell
      run: |
        $env:CARGO_TARGET_DIR = "$env:BUILD_DIR"
        cargo build --${{ inputs.build_type }} --target x86_64-pc-windows-msvc
        
        if (-not (Test-Path "$env:BUILD_DIR\x86_64-pc-windows-msvc\${{ inputs.build_type }}\rustdesk.exe")) {
          Write-Error "Build failed - EXE not found"
          Get-ChildItem -Recurse "$env:BUILD_DIR"
          exit 1
        }

    - name: "5. Upload Artifacts"
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-${{ inputs.build_type }}-${{ github.run_number }}
        path: |
          ${{ env.BUILD_DIR }}/x86_64-pc-windows-msvc/${{ inputs.build_type }}/rustdesk.exe
          ${{ env.BUILD_DIR }}/x86_64-pc-windows-msvc/${{ inputs.build_type }}/*.dll
        retention-days: 7
