name: "1️⃣ Windows Build with Artifacts (Manual Trigger)"

env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "b2cb0da531c2f1f740045bfe7c4dac59f0b2b69c"

on:
  # 手动触发配置（带参数）
  workflow_dispatch:
    inputs:
      build_mode:
        description: '选择构建模式'
        required: true
        default: 'release'
        type: choice
        options:
          - 'release'
          - 'debug'
      upload_artifact:
        description: '是否上传构建产物'
        required: true
        type: boolean
        default: true

  # 自动触发配置
  push:
    branches: [ master ]

jobs:
  build:
    name: "Build Windows EXE [${{ github.event_name == 'workflow_dispatch' && 'Manual' || 'Auto' }}]"
    runs-on: windows-2022

    steps:
    - name: "1️⃣ Checkout code"
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: "2️⃣ Setup vcpkg"
      shell: pwsh
      run: |
        $vcpkgDir = "C:\vcpkg"
        if (-not (Test-Path "$vcpkgDir\.git")) {
          git clone https://github.com/microsoft/vcpkg $vcpkgDir
        }
        cd $vcpkgDir
        git checkout $env:VCPKG_COMMIT_ID
        .\bootstrap-vcpkg.bat
        echo "VCPKG_ROOT=$vcpkgDir" >> $env:GITHUB_ENV
        echo "::group::vcpkg环境信息"
        & "$vcpkgDir\vcpkg" version
        echo "::endgroup::"

    - name: "3️⃣ Install dependencies"
      shell: pwsh
      run: |
        & "$env:VCPKG_ROOT\vcpkg" install --triplet x64-windows libvpx libyuv openssl
        if ($LASTEXITCODE -ne 0) { exit 1 }

    - name: "4️⃣ Install Rust"
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        targets: x86_64-pc-windows-msvc

    - name: "5️⃣ Build (${{ github.event.inputs.build_mode || 'release' }})"
      shell: pwsh
      run: |
        $buildMode = "${{ github.event.inputs.build_mode || 'release' }}"
        cargo build --$buildMode --target x86_64-pc-windows-msvc
        
        $exePath = "target\x86_64-pc-windows-msvc\$buildMode\rustdesk.exe"
        if (-not (Test-Path $exePath)) {
          Write-Error "❌ 未找到EXE文件: $exePath"
          Get-ChildItem -Recurse target\
          exit 1
        }
        echo "EXE_PATH=$exePath" >> $env:GITHUB_ENV

    - name: "6️⃣ Upload Artifact"
      if: ${{ github.event.inputs.upload_artifact != false }}
      uses: actions/upload-artifact@v3
      with:
        name: "RustDesk-${{ github.event.inputs.build_mode || 'release' }}"
        path: |
          ${{ env.EXE_PATH }}
          target\x86_64-pc-windows-msvc\${{ github.event.inputs.build_mode || 'release' }}/*.dll
        retention-days: 7
