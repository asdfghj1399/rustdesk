name: 1Windows Build

env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "b2cb0da531c2f1f740045bfe7c4dac59f0b2b69c"

on:
  workflow_dispatch:  # 手动触发配置
    inputs:
      build_type:
        description: '选择构建类型'
        required: true
        default: 'release'
        type: choice
        options:
          - 'debug'
          - 'release'
  pull_request:
    paths-ignore:
      - "docs/**"
      - "README.md"
  push:
    branches:
      - master
    paths-ignore:
      - ".github/**"
      - "docs/**"
      - "README.md"
      - "res/**"

jobs:
  build-windows:
    name: Build Windows (${{ matrix.target }})
    runs-on: windows-2022
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      id: vcpkg
      with:
        vcpkgDirectory: 'C:\vcpkg'
        vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}

    - name: Install dependencies
      shell: pwsh
      run: |
        $vcpkgPath = "${{ steps.vcpkg.outputs.vcpkgRoot }}\vcpkg"
        & "$vcpkgPath" install --triplet x64-windows libvpx libyuv openssl
        if ($LASTEXITCODE -ne 0) {
            Write-Error "vcpkg 安装失败"
            exit 1
        }

    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        targets: ${{ matrix.target }}

    - name: Build
      shell: pwsh
      run: |
        $buildType = "${{ github.event.inputs.build_type || 'release' }}"
        cargo build --$buildType --target ${{ matrix.target }}
        if ($LASTEXITCODE -ne 0) {
            Write-Error "构建失败"
            exit 1
        }

    - name: Show output
      shell: pwsh
      run: |
        $buildType = "${{ github.event.inputs.build_type || 'release' }}"
        dir "target\${{ matrix.target }}\$buildType\"
        Write-Host "✅ 构建成功！生成文件位于 target\${{ matrix.target }}\$buildType\"
