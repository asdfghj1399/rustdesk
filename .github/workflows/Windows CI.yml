name: "🚀 RustDesk手动触发构建（中文优化版）"

on:
  # 手动触发配置（已添加）
  workflow_dispatch:
    inputs:
      构建模式:
        description: "选择构建类型"
        required: true 
        default: "release"
        type: choice
        options: 
          - "release"
          - "debug"
      清理缓存:
        description: "是否彻底清理构建缓存"
        type: boolean
        default: false

env:
  # 中文环境专用配置
  LC_ALL: "zh_CN.UTF-8"
  VCPKG_ROOT: "C:\\rustdesk_build"

jobs:
  构建任务:
    runs-on: windows-latest
    
    steps:
    - name: "1. 环境初始化"
      shell: cmd
      run: |
        chcp 65001
        @echo 正在准备构建环境...
        if %{{ inputs.清理缓存 }}% == true (
          rd /s/q "%VCPKG_ROOT%" 2>nul
          rd /s/q target 2>nul
        )

    - name: "2. 安装构建工具"
      shell: cmd
      run: |
        if not exist "%VCPKG_ROOT%\\vcpkg.exe" (
          git clone https://github.com/microsoft/vcpkg "%VCPKG_ROOT%"
          cd "%VCPKG_ROOT%"
          bootstrap-vcpkg.bat -disableMetrics
        )
        setx PATH "%PATH%;%VCPKG_ROOT%"

    - name: "3. 安装依赖库"
      shell: cmd
      run: |
        cd "%VCPKG_ROOT%"
        vcpkg install --triplet x64-windows ^
          libvpx libyuv openssl ^
          --clean-after-build

    - name: "4. 编译项目"
      shell: cmd
      run: |
        set CARGO_TARGET_DIR=%CD%\\build_output
        cargo build --%{{ inputs.构建模式 }}% ^
          --target x86_64-pc-windows-msvc ^
          --config "build.rustflags=['-C', 'target-feature=+crt-static']"
        
        if not exist "%CARGO_TARGET_DIR%\\x86_64-pc-windows-msvc\\%{{ inputs.构建模式 }}%\\rustdesk.exe" (
          echo ::error::编译失败：未生成可执行文件
          exit 1
        )

    - name: "5. 打包成品"
      uses: actions/upload-artifact@v4
      with:
        name: RustDesk成品_%{{ github.run_number }}
        path: |
          build_output/x86_64-pc-windows-msvc/%{{ inputs.构建模式 }}%/rustdesk.exe
          build_output/x86_64-pc-windows-msvc/%{{ inputs.构建模式 }}%/*.dll
