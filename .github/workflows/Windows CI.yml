name: "🛠️ RustDesk Manual Build (Fixed Encoding Issues)"

on:
  workflow_dispatch:
    inputs:
      build_type:  # 构建类型
        description: "Select build mode"
        required: true
        type: choice
        options: ["release", "debug"]
        default: "release"
      clean_cache:  # 强制清理
        description: "Force clean cache (fix encoding issues)"
        type: boolean
        default: false

env:
  # 中文环境保障
  LC_ALL: "zh_CN.UTF-8"
  VCPKG_ROOT: "C:\\vcpkg_build"
  BUILD_DIR: "C:\\rustdesk_output"  # Fixed English output path

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
    - name: "1. Environment Cleanup"  # 环境净化
      if: ${{ inputs.clean_cache }}
      shell: cmd
      run: |
        chcp 65001 >nul
        rd /s/q "%VCPKG_ROOT%" 2>nul
        rd /s/q "%BUILD_DIR%" 2>nul
        rd /s/q target 2>nul

    - name: "2. Initialize vcpkg"  # 初始化vcpkg
      shell: cmd
      run: |
        chcp 65001 >nul
        if not exist "%VCPKG_ROOT%\\vcpkg.exe" (
          git clone https://github.com/microsoft/vcpkg "%VCPKG_ROOT%"
          cd "%VCPKG_ROOT%"
          bootstrap-vcpkg.bat -disableMetrics
        )
        setx PATH "%PATH%;%VCPKG_ROOT%"

    - name: "3. Install Dependencies (Safe Mode)"  # 安装依赖（安全模式）
      shell: cmd
      run: |
        cd "%VCPKG_ROOT%"
        vcpkg install --triplet x64-windows ^
          --clean-after-build ^
          --recurse ^
          libvpx libyuv openssl

    - name: "4. Safe Build"  # 安全构建
      shell: cmd
      run: |
        set CARGO_TARGET_DIR=%BUILD_DIR%
        cargo build --%{{ inputs.build_type }}% ^
          --target x86_64-pc-windows-msvc ^
          --config "build.rustflags=['-C', 'target-feature=+crt-static']"
        
        if not exist "%BUILD_DIR%\\x86_64-pc-windows-msvc\\%{{ inputs.build_type }}%\\rustdesk.exe" (
          echo ::error::Build failed: No output file detected
          dir /s "%BUILD_DIR%"
          exit 1
        )

    - name: "5. Package Artifacts"  # 打包成品
      uses: actions/upload-artifact@v4
      with:
        name: RustDesk_%{{ inputs.build_type }}%_%{{ github.run_number }}
        path: |
          %BUILD_DIR%/x86_64-pc-windows-msvc/%{{ inputs.build_type }}%/rustdesk.exe
          %BUILD_DIR%/x86_64-pc-windows-msvc/%{{ inputs.build_type }}%/*.dll
        retention-days: 7
