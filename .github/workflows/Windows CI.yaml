name: Windows CI

env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  VCPKG_COMMIT_ID: "b2cb0da531c2f1f740045bfe7c4dac59f0b2b69c"

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "README.md"
  push:
    branches:
      - master
    paths-ignore:
      - ".github/**"
      - "docs/**"
      - "README.md"
      - "res/**"

jobs:
  build-windows:
    name: Build for Windows (${{ matrix.target }})
    runs-on: windows-2022
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc, x86_64-pc-windows-gnu]
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: 'C:\vcpkg'
        vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}

    - name: Install vcpkg dependencies
      run: |
        .\vcpkg\vcpkg install --triplet x64-windows libvpx libyuv openssl

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        targets: ${{ matrix.target }}

    - name: Show version info
      shell: pwsh
      run: |
        rustup -V
        cargo -V
        rustc -V

    - uses: Swatinem/rust-cache@v2

    - name: Build Release
      run: |
        cargo build --release --target ${{ matrix.target }}
        ls -R target/${{ matrix.target }}/release/

    - name: Run Windows tests
      if: matrix.target == 'x86_64-pc-windows-msvc'  # 只在MSVC环境测试
      run: |
        cargo test --release --target ${{ matrix.target }} -- --skip test_get_cursor_pos --skip test_get_key_state
