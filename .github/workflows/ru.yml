name: RustDesk CI/CD (最终修正版)

on:
  workflow_dispatch:
    inputs:
      build-mode:
        description: '选择构建模式'
        type: choice
        options:
          - debug
          - release
        default: 'release'
      force-clean:
        description: '强制清理工作区'
        type: boolean
        default: false

jobs:
  init:
    name: 初始化环境
    runs-on: windows-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        submodules: recursive
        path: src
        # 新增深度克隆参数
        fetch-depth: 0
        # 强制清理残留锁文件
        clean: true

    - name: 修复子模块路径
      shell: powershell
      working-directory: ./src  # 关键修复点
      run: |
        # 确保在代码目录内操作
        Write-Output "当前路径: $(Get-Location)"
        
        # 强制重置子模块
        git submodule deinit -f .
        git submodule update --init --force --recursive --depth=1
        
        # 验证核心子模块
        $hbbPath = "libs\hbb_common"
        if (-not (Test-Path "$hbbPath\.git")) {
            Write-Output "::error::子模块初始化失败！目录结构："
            Get-ChildItem -Recurse | Format-Table FullName
            exit 1
        }

  build:
    needs: init
    runs-on: windows-latest
    steps:
    - name: 构建准备
      working-directory: ./src
      run: |
        # 设置编译环境
        $env:Path += ";C:\Program Files\LLVM\bin"
        cargo --version

    - name: 清理缓存
      if: ${{ inputs.force-clean }}
      working-directory: ./src
      run: Remove-Item -Recurse target -ErrorAction SilentlyContinue

    - name: 构建项目
      working-directory: ./src
      run: cargo build --${{ inputs.build-mode }} --bin rustdesk

    - name: 上传产物
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-bin
        path: |
          src/target/${{ inputs.build-mode }}/rustdesk.exe
          src/target/${{ inputs.build-mode }}/*.dll
