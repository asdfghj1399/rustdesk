name: RustDesk CI/CD (VCPKG修复版)

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: '选择构建类型'
        type: choice
        options: [debug, release]
        default: 'release'

env:
  VCPKG_ROOT: "C:\\vcpkg"
  VCPKG_DEFAULT_TRIPLET: "x64-windows-static"

jobs:
  setup:
    name: 环境准备
    runs-on: windows-latest
    steps:
    - name: 安装VCPKG
      shell: powershell
      run: |
        # 清理旧安装
        if (Test-Path "$env:VCPKG_ROOT") {
            Remove-Item -Recurse -Force "$env:VCPKG_ROOT"
        }
        
        # 克隆并初始化vcpkg
        git clone https://github.com/microsoft/vcpkg "$env:VCPKG_ROOT"
        & "$env:VCPKG_ROOT\bootstrap-vcpkg.bat" -disableMetrics

    - name: 安装依赖库
      shell: powershell
      run: |
        # 正确安装命令格式
        & "$env:VCPKG_ROOT\vcpkg" install `
          libvpx[core] `
          libyuv[core] `
          openssl[core] `
          --triplet $env:VCPKG_DEFAULT_TRIPLET
        
        # 验证安装结果
        & "$env:VCPKG_ROOT\vcpkg" list --triplet $env:VCPKG_DEFAULT_TRIPLET

  build:
    needs: setup
    runs-on: windows-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: 配置构建环境
      shell: powershell
      run: |
        # 设置vcpkg集成
        & "$env:VCPKG_ROOT\vcpkg" integrate install
        $env:VCPKGRS_DYNAMIC = "1"
        $env:VCPKG_TARGET_TRIPLET = "$env:VCPKG_DEFAULT_TRIPLET"
        $env:CMAKE_TOOLCHAIN_FILE = "$env:VCPKG_ROOT\scripts\buildsystems\vcpkg.cmake"

    - name: 构建项目
      shell: powershell
      env:
        RUSTFLAGS: "-C target-feature=+crt-static"
      run: |
        cargo build --${{ inputs.build_type }} --features "vcpkg" -v

    - name: 上传产物
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-bin
        path: |
          target/${{ inputs.build_type }}/rustdesk.exe
          target/${{ inputs.build_type }}/*.dll
