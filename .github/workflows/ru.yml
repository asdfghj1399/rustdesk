name: RustDesk CI/CD (权限问题修复版)

on:
  workflow_dispatch:
    inputs:
      clean_build:
        description: '执行完全清理'
        type: boolean
        default: false

env:
  WORKSPACE: "${{ github.workspace }}\\src"
  VCPKG_ROOT: "C:\\vcpkg"

jobs:
  setup:
    name: 环境初始化
    runs-on: windows-latest
    steps:
    - name: 创建工作目录
      shell: powershell
      run: |
        # 创建带转义字符的路径
        $workspace = $env:WORKSPACE -replace '\\{2,}', '\'
        if (-not (Test-Path $workspace)) {
            New-Item -Path $workspace -ItemType Directory -Force | Out-Null
        }
        Write-Output "##[info]工作目录创建成功：$workspace"

    - name: 检出代码
      uses: actions/checkout@v4
      with:
        submodules: recursive
        path: ${{ env.WORKSPACE }}
        clean: true
        fetch-depth: 0

    - name: 修复文件权限
      shell: powershell
      working-directory: ${{ env.WORKSPACE }}
      run: |
        # 验证路径存在性
        if (-not (Test-Path .)) {
            Write-Output "::error::工作目录不存在：$pwd"
            exit 1
        }

        # 修正的icacls命令格式
        $fullPath = Convert-Path .
        icacls "$fullPath" /grant "Everyone:(OI)(CI)F" /T /C
        if ($LASTEXITCODE -ne 0) {
            Write-Output "::error::权限设置失败，退出码：$LASTEXITCODE"
            exit $LASTEXITCODE
        }

        # 附加权限验证
        $acl = Get-ACL $fullPath
        Write-Output "##[info]当前权限设置："
        $acl.Access | Format-Table IdentityReference, FileSystemRights

  build:
    needs: setup
    runs-on: windows-latest
    steps:
    - name: 显示环境信息
      shell: powershell
      working-directory: ${{ env.WORKSPACE }}
      run: |
        Write-Output "##[group]系统信息"
        systeminfo | Select-String 'OS Name','OS Version'
        Write-Output "##[endgroup]"

        Write-Output "##[group]磁盘信息"
        Get-Volume | Format-Table DriveLetter, SizeRemaining
        Write-Output "##[endgroup]"
