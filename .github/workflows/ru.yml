name: Build RustDesk (Windows)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  RUST_VERSION: "1.75.0"
  FLUTTER_VERSION: "3.24.5"  # 明确指定Flutter版本
  VERSION: "1.3.9"
  BUILD_DIR: "target/release"
  FLUTTER_BUILD_DIR: "flutter/build/windows/x64/runner/Release"

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 120

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Flutter (Fixed)
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ env.RUST_VERSION }}
        targets: x86_64-pc-windows-msvc
        override: true
        components: rustfmt

    - name: Install system dependencies (Fixed)
      shell: powershell
      run: |
        # 修复Chocolatey安装
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12
        $chocoScript = Join-Path $env:TEMP 'choco-install.ps1'
        Invoke-WebRequest -Uri 'https://community.chocolatey.org/install.ps1' -OutFile $chocoScript -UseBasicParsing
        & $chocoScript
        Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1" -Force
        $env:PATH = "$env:PATH;C:\Program Files\CMake\bin;C:\ProgramData\chocolatey\bin"

        # 安装必要工具
        choco install -y cmake git python --version=3.9.13 llvm --version=15.0.6 nasm
        refreshenv

    - name: Verify environments
      shell: powershell
      run: |
        flutter --version
        rustc --version
        cargo --version
        cmake --version

    - name: Build Rust backend
      shell: powershell
      run: |
        cd rust
        cargo build --release --features hwcodec,vram,flutter
        if (-not (Test-Path "../$env:BUILD_DIR/rustdesk.exe")) {
            throw "Rust build failed - rustdesk.exe not found"
        }

    - name: Build Flutter frontend
      shell: powershell
      run: |
        flutter pub get
        flutter build windows --release
        if (-not (Test-Path "$env:FLUTTER_BUILD_DIR/rustdesk.exe")) {
            throw "Flutter build failed - rustdesk.exe not found"
        }

    - name: Merge builds
      shell: powershell
      run: |
        # 复制Rust构建的可执行文件到Flutter构建目录
        Copy-Item "$env:BUILD_DIR/rustdesk.exe" -Destination "$env:FLUTTER_BUILD_DIR" -Force

    - name: Package artifacts
      shell: powershell
      run: |
        $artifactDir = "release_$env:VERSION"
        New-Item -ItemType Directory -Path $artifactDir -Force
        
        # 复制所有必要文件
        Copy-Item "$env:FLUTTER_BUILD_DIR/rustdesk.exe" -Destination $artifactDir
        Copy-Item "$env:FLUTTER_BUILD_DIR/*.dll" -Destination $artifactDir
        
        # 创建ZIP包
        Compress-Archive -Path "$artifactDir/*" -DestinationPath "rustdesk-$env:VERSION.zip" -Force

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-windows
        path: |
          rustdesk-$env:VERSION.zip
          ${{ env.FLUTTER_BUILD_DIR }}/rustdesk.exe
        retention-days: 7
