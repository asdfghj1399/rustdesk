name: RustDesk CI/CD (路径问题修复版)

on:
  workflow_dispatch:
    inputs:
      clean_build:
        description: '执行完全清理'
        type: boolean
        default: false

env:
  WORKSPACE: ${{ github.workspace }}\src  # 显式声明Windows路径格式
  VCPKG_ROOT: C:\vcpkg

jobs:
  setup:
    name: 环境初始化
    runs-on: windows-latest
    steps:
    - name: 创建工作目录
      shell: powershell
      run: |
        # 强制创建带空格的路径
        $workspace = "$env:WORKSPACE"
        if (-not (Test-Path $workspace)) {
            New-Item -Path $workspace -ItemType Directory -Force
        }
        Write-Output "##[info]工作目录已创建：$workspace"

    - name: 检出代码
      uses: actions/checkout@v4
      with:
        submodules: recursive
        path: ${{ env.WORKSPACE }}  # 修正路径引用方式
        clean: true

    - name: 修复文件权限
      shell: powershell
      working-directory: ${{ env.WORKSPACE }}  # 使用表达式语法
      run: |
        # 验证路径存在性
        if (-not (Test-Path .)) {
            Write-Output "::error::工作目录不存在：$pwd"
            exit 1
        }

        # 递归设置权限（使用绝对路径）
        $fullPath = Convert-Path .
        icacls "$fullPath" /grant Everyone:(OI)(CI)F /T
        Write-Output "##[info]权限已设置：$fullPath"

  build:
    needs: setup
    runs-on: windows-latest
    steps:
    - name: 显示环境信息
      shell: powershell
      working-directory: ${{ env.WORKSPACE }}
      run: |
        Write-Output "##[group]路径诊断信息"
        Write-Output "工作目录：$pwd"
        Get-ChildItem | Format-Table Name, FullName
        Write-Output "##[endgroup]"

    - name: 构建项目
      shell: powershell
      working-directory: ${{ env.WORKSPACE }}
      run: |
        cargo build --release
        if (-not (Test-Path "target\release\rustdesk.exe")) {
            Write-Output "::error::构建产物未生成"
            Get-ChildItem target\release
            exit 1
        }
