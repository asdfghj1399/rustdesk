name: RustDesk CI/CD (路径修复版)

on:
  workflow_dispatch:
    inputs:
      verbose:
        description: "显示详细日志"
        type: boolean
        default: false

jobs:
  setup:
    runs-on: windows-latest
    steps:
    - name: Checkout with Submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
        path: src
        # 强制重置子模块缓存
        clean: true

    - name: Validate Submodules
      shell: powershell
      run: |
        $ErrorActionPreference = "Stop"
        
        # 列出所有子模块状态
        Write-Output "##[group]Submodule Status"
        git submodule status --recursive
        Write-Output "##[endgroup]"

        # 验证关键路径
        $criticalPaths = @(
            "$env:GITHUB_WORKSPACE/src/libs/hbb_common",
            "$env:GITHUB_WORKSPACE/src/libs/hbb_common/Cargo.toml"
        )

        foreach ($path in $criticalPaths) {
            if (-not (Test-Path $path)) {
                Write-Output "::error::关键路径缺失: $path"
                Get-ChildItem "$env:GITHUB_WORKSPACE/src/libs" -Recurse
                exit 1
            }
        }

        # 转换Unix路径为Windows格式
        $hbbPath = "$env:GITHUB_WORKSPACE/src/libs/hbb_common" -replace '/', '\'
        Set-Location $hbbPath
        Write-Output "当前工作目录: $(Get-Location)"

  build:
    needs: setup
    runs-on: windows-latest
    steps:
    - name: Build hbb_common
      shell: powershell
      run: |
        # 使用绝对路径
        $hbbPath = "$env:GITHUB_WORKSPACE/src/libs/hbb_common"
        
        # 构建子模块
        cargo build --manifest-path "$hbbPath\Cargo.toml" --verbose
        
        # 验证构建产物
        if (-not (Test-Path "$hbbPath\target\debug\hbb_common.rlib")) {
            Get-ChildItem "$hbbPath\target" -Recurse
            exit 1
        }

    - name: Build Main Project
      run: cargo build --release

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: |
          target/release/rustdesk.exe
          target/release/*.dll
