name: Build RustDesk (Windows)

on:
  workflow_dispatch:
    inputs:
      clean_build:
        description: "Perform clean rebuild"
        type: boolean
        default: false
      enable_hwcodec:
        description: "Enable hardware acceleration"
        type: boolean
        default: false  # 默认禁用硬件加速

env:
  VERSION: "1.3.9"
  FLUTTER_VERSION: "3.24.5"
  RUST_VERSION: "1.75.0"
  VCPKG_COMMIT_ID: "6f29f12e82a8293156836ad81cc9bf5af41fe836"
  BUILD_TYPE: "release"
  TARGET_ARCH: "x86_64"

jobs:
  build:
    runs-on: windows-2022
    timeout-minutes: 120

    steps:
    - name: Clean workspace
      if: ${{ inputs.clean_build }}
      shell: powershell
      run: |
        Remove-Item -Recurse -Force "$env:GITHUB_WORKSPACE\vcpkg" -ErrorAction SilentlyContinue
        Remove-Item -Recurse -Force "$env:GITHUB_WORKSPACE\target" -ErrorAction SilentlyContinue

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install dependencies
      shell: powershell
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
        
        choco install -y llvm --version=15.0.6
        choco install -y nasm cmake git python --ignore-checksums
        refreshenv
        $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH", "User")

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: ${{ env.RUST_VERSION }}
        targets: x86_64-pc-windows-msvc
        components: rustfmt

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Patch Flutter engine
      shell: powershell
      run: |
        flutter doctor -v
        flutter precache --windows
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri "https://github.com/rustdesk/engine/releases/download/main/windows-x64-release.zip" -OutFile "engine.zip"
        Expand-Archive -Path "engine.zip" -DestinationPath "engine"
        Move-Item -Force "engine\*" "C:\hostedtoolcache\windows\flutter\stable-$env:FLUTTER_VERSION-x64\bin\cache\artifacts\engine\windows-x64-release\"

    - name: Setup vcpkg
      shell: powershell
      run: |
        git clone https://github.com/microsoft/vcpkg "$env:GITHUB_WORKSPACE\vcpkg"
        cd "$env:GITHUB_WORKSPACE\vcpkg"
        git checkout $env:VCPKG_COMMIT_ID
        .\bootstrap-vcpkg.bat -disableMetrics
        .\vcpkg integrate install

    - name: Install vcpkg dependencies
      shell: powershell
      run: |
        .\vcpkg\vcpkg install --triplet x64-windows-static `
          libvpx libyuv openssl opus ffmpeg aom

    - name: Build RustDesk (Fixed)
      shell: powershell
      run: |
        # 根据输入决定是否启用硬件加速
        $hwcodecArg = ""
        if ('${{ inputs.enable_hwcodec }}' -eq 'true') {
            # 确保硬件加速依赖存在
            if (-not (Test-Path "$env:GITHUB_WORKSPACE\vcpkg\installed\x64-windows-static\bin\avcodec-58.dll")) {
                Write-Output "Warning: Hardware acceleration dependencies not found, disabling hwcodec"
            } else {
                $hwcodecArg = "--hwcodec"
            }
        }
        
        # 构建参数
        $argsList = @("--flutter", "--vram", "--portable", "--skip-portable-pack")
        if ($hwcodecArg -ne "") {
            $argsList += $hwcodecArg
        }
        
        Write-Output "Building with arguments: $argsList"
        
        # 执行构建
        python .\build.py $argsList
        
        # 验证构建结果
        if (-not (Test-Path "flutter\build\windows\x64\runner\Release\rustdesk.exe")) {
            # 尝试不带硬件加速的构建
            if ($hwcodecArg -ne "") {
                Write-Output "Retrying build without hwcodec..."
                python .\build.py --flutter --vram --portable --skip-portable-pack
                
                if (-not (Test-Path "flutter\build\windows\x64\runner\Release\rustdesk.exe")) {
                    throw "Build failed even without hwcodec"
                }
            } else {
                throw "Build failed - rustdesk.exe not found!"
            }
        }

    - name: Package artifacts
      shell: powershell
      run: |
        New-Item -ItemType Directory -Path ".\dist" -Force
        Copy-Item -Path "flutter\build\windows\x64\runner\Release\*" -Destination ".\dist" -Recurse
        
        # 下载USB驱动
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri "https://github.com/rustdesk-org/rdev/releases/download/usbmmidd_v2/usbmmidd_v2.zip" -OutFile "usbmmidd.zip"
        Expand-Archive -Path "usbmmidd.zip" -DestinationPath ".\usbmmidd"
        Move-Item -Path ".\usbmmidd\x64\*" -Destination ".\dist\usbmmidd_v2" -Force
        
        # 创建ZIP包
        Compress-Archive -Path ".\dist\*" -DestinationPath ".\rustdesk-$env:VERSION-portable.zip" -Force

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-windows
        path: |
          rustdesk-${{ env.VERSION }}-portable.zip
          dist\rustdesk.exe
        retention-days: 7
