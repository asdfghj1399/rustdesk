name: Build Flutter Windows - Optimized

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  RUST_VERSION: "1.75.0"
  VCPKG_COMMIT_ID: "2024.04.12"
  FLUTTER_VERSION: "3.24.5"
  VCPKG_ROOT: C:\vcpkg

jobs:
  setup-dependencies:
    runs-on: windows-2022
    outputs:
      vcpkg_cache_key: ${{ steps.vcpkg-cache.outputs.cache-key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: C:\vcpkg
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}

      - name: Generate vcpkg cache key
        id: vcpkg-cache
        run: echo "cache-key=vcpkg-${{ runner.os }}-${{ env.VCPKG_COMMIT_ID }}" >> $GITHUB_OUTPUT

  build-for-windows-flutter:
    needs: [setup-dependencies]
    runs-on: windows-2022
    strategy:
      matrix:
        arch: [x86_64]
        build_type: [hwcodec,flutter,vram]
    
    env:
      RUSTFLAGS: "-C target-feature=+crt-static"
      VCPKG_DEFAULT_TRIPLET: x64-windows-static

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore vcpkg cache
        uses: actions/cache@v3
        with:
          path: C:\vcpkg
          key: ${{ needs.setup-dependencies.outputs.vcpkg_cache_key }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: x86_64-pc-windows-msvc

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable

      - name: Install Build Dependencies
        shell: powershell
        run: |
          & "$env:VCPKG_ROOT\vcpkg" install \
            libvpx[core] \
            libyuv[core] \
            opus[core] \
            --triplet $env:VCPKG_DEFAULT_TRIPLET
          if ($LASTEXITCODE -ne 0) { exit 1 }

      - name: Build RustDesk
        shell: powershell
        run: |
          $ErrorActionPreference = "Stop"
          
          # 更新依赖锁定
          cargo update -p magnum-opus
          
          # 构建核心库
          cargo build --release --features ${{ matrix.build_type }}
          
          # 构建Flutter部分
          python .\build.py `
            --features ${{ matrix.build_type }} `
            --portable `
            --skip-portable-pack `
            --vcpkg-root "$env:VCPKG_ROOT"
          
          # 验证输出文件
          if (-not (Test-Path ".\target\release\rustdesk.exe")) {
            Write-Error "Build failed: rustdesk.exe not found"
            exit 1
          }

      - name: Package Artifacts
        shell: powershell
        run: |
          $version = (Get-Item ".\target\release\rustdesk.exe").VersionInfo.FileVersion
          Compress-Archive -Path ".\target\release\*" -DestinationPath "rustdesk-$version-${{ matrix.arch }}.zip"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows
          path: |
            .\rustdesk-*.zip
            .\target\release\rustdesk.exe
