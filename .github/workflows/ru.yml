name: Build RustDesk (Windows)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  RUST_VERSION: "1.75.0"
  FLUTTER_VERSION: "3.24.5"
  PYTHON_VERSION: "3.9.13"
  LLVM_VERSION: "15.0.6"
  NASM_VERSION: "2.16.01"

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 120

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ env.RUST_VERSION }}
        targets: x86_64-pc-windows-msvc
        override: true
        components: rustfmt

    - name: Install system dependencies (Fixed)
      shell: powershell
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        $ProgressPreference = 'SilentlyContinue'
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

        # 安装 Chocolatey
        if (-not (Test-Path "$env:ProgramData\chocolatey\choco.exe")) {
            iwr https://community.chocolatey.org/install.ps1 -UseBasicParsing | iex
        }
        $env:PATH += ";$env:ProgramData\chocolatey\bin"

        # 安装 Python (使用官方安装包)
        $pythonInstaller = "python-$env:PYTHON_VERSION-amd64.exe"
        Invoke-WebRequest "https://www.python.org/ftp/python/$env:PYTHON_VERSION/$pythonInstaller" -OutFile $pythonInstaller
        Start-Process $pythonInstaller -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait
        Remove-Item $pythonInstaller

        # 安装 LLVM (强制指定版本)
        choco install -y llvm --version=$env:LLVM_VERSION --force --allow-downgrade

        # 安装 NASM (多源下载方案)
        $nasmUrls = @(
            "https://github.com/ShiftMediaProject/nasm/releases/download/nasm-$env:NASM_VERSION-1/win64-nasm.zip",
            "https://github.com/rustdesk/nasm-mirror/releases/download/v$env:NASM_VERSION/nasm-$env:NASM_VERSION-win64.zip"
        )

        $nasmInstalled = $false
        foreach ($url in $nasmUrls) {
            try {
                Write-Output "Attempting to download NASM from $url"
                Invoke-WebRequest -Uri $url -OutFile "nasm.zip" -TimeoutSec 30
                Expand-Archive -Path "nasm.zip" -DestinationPath "C:\nasm" -Force
                if (Test-Path "C:\nasm\nasm.exe") {
                    $env:PATH = "C:\nasm;$env:PATH"
                    $nasmInstalled = $true
                    break
                }
            } catch {
                Write-Output "Download failed: $($_.Exception.Message)"
            }
        }

        if (-not $nasmInstalled) {
            throw "Failed to install NASM from all sources"
        }

        # 验证环境
        python --version
        pip --version
        nasm --version
        clang --version

    - name: Build project
      shell: powershell
      run: |
        # 添加具体构建命令
        echo "Starting build process..."
        cd rust
        cargo build --release --features hwcodec,vram,flutter
        Copy-Item "target/release/rustdesk.exe" -Destination "../flutter/build/windows/x64/runner/Release" -Force

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-windows
        path: flutter/build/windows/x64/runner/Release/rustdesk.exe
        retention-days: 7
